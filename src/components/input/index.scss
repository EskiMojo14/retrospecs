@use "sass:map";
@use "~/theme";
@use "~/theme/animation";
@use "~/theme/elevation";
@use "~/theme/typography";
@use "~/util";

.input-group {
  --border-color: var(--gold-500);
  --hover-border-color: var(--gold-300);
  --focus-border-color: var(--gold-200);
  --selection-color: var(--gold-500);
  --selection-text-color: var(--white);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  @include theme.dark {
    --border-color: var(--gold-300);
    --hover-border-color: var(--gold-200);
    --focus-border-color: var(--gold-100);
    --selection-color: var(--gold-300);
    --selection-text-color: var(--black);
  }
  &__input-container {
    display: flex;
    padding: 0.5rem;
    gap: 0.5rem;
    align-items: center;
    border-radius: var(--border-radius);
    --background-alpha: 0.75;
    background-color: rgba(var(--surface-rgb), var(--background-alpha));
    border: var(--outline-width) solid var(--border-color);
    max-width: 100%;
    max-height: 60vh;
    &::selection {
      background-color: var(--selection-color);
      color: var(--selection-text-color);
    }
    &[data-hovered] {
      --background-alpha: 0.85;
      border-color: var(--hover-border-color);
    }
    &[data-focused] {
      --background-alpha: 0.9;
      border-color: var(--focus-border-color);
    }
    &[data-disabled] {
      opacity: map.get(typography.$emphasis-map, disabled);
    }
    @include theme.focus-ring;
  }
  &__icon {
    color: typography.emphasis("text", "medium");
  }
  &__error-message {
    font-weight: 600;
    color: var(--red-700);
    @include theme.dark {
      color: var(--red-200);
    }
  }
  &__description {
    white-space: pre-wrap;
    color: typography.emphasis("text", "medium");
    @include theme.dark {
      color: typography.emphasis("text", "medium");
    }
  }
}

.text-field {
  &__action {
    margin: -0.5rem;
    @include util.rtl-position(left, 0, -0.5rem);
  }
  &__input,
  &__textarea {
    background-color: transparent;
    appearance: none;
    border: none;
    height: 100%;
    color: inherit;
    caret-color: currentColor;
    @include typography.style("body1");
    flex: 1 1 auto;
    max-width: 100%;
    max-height: 60vh;
    &:focus {
      outline: none;
    }
  }
}

.select {
  .input-group__input-container {
    &:focus-visible {
      outline: none;
    }
  }
  &__dropdown-icon {
    color: typography.emphasis("text", "medium");
    transition: transform 200ms;
    .select[data-open] & {
      transform: rotate(180deg);
    }
  }
  &__select-value {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    .select__ripple {
      display: none;
    }
  }
  &__popover {
    background-color: var(--surface);
    border-radius: var(--border-radius);
    @include elevation.elevation(6);
    min-width: var(--trigger-width);
    padding: 0.5rem 0;
    &[data-entering] {
      transform-origin: top center;
      animation:
        popover-fade 250ms,
        popover-enter 100ms ease-in;
    }
    &[data-exiting] {
      animation:
        popover-fade 250ms reverse 50ms,
        popover-exit 100ms ease-out forwards 50ms;
    }
  }
  &__item {
    --selected-background-rgb: var(--gold-500-rgb);
    --background-alpha: 0;
    --selected-text-rgb: var(--gold-900-rgb);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    .input-group__icon {
      @include util.rtl-box(margin, -0.5rem);
    }
    color: typography.emphasis("text", "high");
    background-color: rgba(
      var(--selected-background-rgb),
      var(--background-alpha)
    );
    &[data-hovered] {
      --background-alpha: #{theme.states-opacity("hover")};
    }
    &[data-focused] {
      --background-alpha: #{theme.states-opacity("focus")};
    }
    &[data-selected] {
      $selected-opacity: theme.states-opacity("selected");
      --background-alpha: #{$selected-opacity};
      --text-rgb: var(--selected-text-rgb);
      &[data-hovered] {
        --background-alpha: #{theme.states-opacity("hover", $selected-opacity)};
      }
      &[data-focused] {
        --background-alpha: #{theme.states-opacity("focus", $selected-opacity)};
      }
    }
    &:focus {
      outline: none;
    }
  }
}

@keyframes popover-fade {
  @include animation.fade-in;
}

@keyframes popover-enter {
  @include animation.spring-in;
}

@keyframes popover-exit {
  @include animation.shrink-back;
}
