@use "sass:map";
@use "@/util";
@use "@/components/typography/mixins" as typography-mixins;
@use "@/components/typography/variables" as typography-variables;
@use "./mixins";

.button {
  --dark-rgb: var(--orange-dark-rgb);
  --light-rgb: var(--orange-light-rgb);
  --background-rgb: var(--dark-rgb);
  --background: #{rgb(var(--background-rgb))};
  @include mixins.ink("dark");
  --outline: var(--button-text);
  --outline-width: 2px;
  --border-radius: 8px;
  color: var(--button-text);
  @include typography-mixins.style("button");
  text-wrap: nowrap;
  padding: 8px 16px;
  border-radius: var(--border-radius);
  transition:
    background 200ms,
    outline 200ms,
    outline-offset 200ms;
  display: flex;
  justify-content: center;
  align-items: center;

  @at-root button#{&} {
    appearance: none;
    border: none;
    &--text,
    &--outlined {
      background: none;
    }
  }
  @at-root a#{&} {
    text-decoration: none;
  }
  &--outlined,
  &--contained {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      top: var(--outline-width);
      left: var(--outline-width);
      right: var(--outline-width);
      bottom: var(--outline-width);
      border: var(--outline-width) solid var(--outline);
      border-radius: calc(var(--border-radius) - var(--outline-width));
      pointer-events: none;
    }
  }
  &--contained {
    background: var(--background);
    @include mixins.contained-ink("light");
  }
  &[data-hovered] {
    background: var(--hover-color);
  }
  &[data-focused] {
    background: var(--focus-color);
    outline: none;
  }
  &[data-pressed] {
    background: var(--pressed-color);
  }
  &[data-focus-visible] {
    outline: 2px solid var(--focus-ring-color);
    outline-offset: 2px;
  }
  &[data-disabled] {
    opacity: map.get(typography-variables.$emphasis-map, "disabled");
  }
}
