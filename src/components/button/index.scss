@use "sass:map";
@use "~/theme";
@use "~/theme/typography";
@use "~/theme/elevation";
@use "~/util";
@use "./mixins";
@use "./variables";

.button {
  --background-rgb: var(--dark-rgb);
  --background-alpha: 0;
  --background: #{rgba(var(--background-rgb), var(--background-alpha))};
  --outline: var(--button-text);
  --outline-width: #{variables.$outline-width};
  --border-radius: #{variables.$border-radius};
  background: var(--background);
  color: var(--button-text);
  text-wrap: nowrap;
  padding: variables.$padding;
  min-height: variables.$min-height;
  border-radius: var(--border-radius);
  transition:
    background 200ms,
    outline 200ms,
    outline-offset 200ms,
    box-shadow 200ms,
    translate 200ms;
  display: flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  @include typography.style("button");

  @include mixins.ink("dark");
  @include mixins.colors;
  @include theme.states;
  @include theme.focus-ring;

  @at-root button#{&} {
    appearance: none;
    border: none;
    &:focus:not([data-focus-visible]) {
      outline: none;
    }
  }
  @at-root a#{&} {
    text-decoration: none;
  }
  &--outlined,
  &--filled,
  &--elevated {
    position: relative;
    @include mixins.outline;
  }
  &--filled,
  &--elevated {
    @include mixins.filled-ink("light");
  }
  &--elevated {
    --shadow: var(--background);
    @include elevation.elevation(2);
    &[data-hovered] {
      translate: -2px -2px;
      @include elevation.elevation(4);
    }
    &[data-focus-visible],
    &[data-pressed] {
      translate: 0 0;
      @include elevation.elevation(2);
    }
  }
  &--compact {
    padding: variables.$compact-padding;
    min-height: variables.$compact-min-height;
    .button__icon {
      &--leading {
        @include util.rtl-box(margin, 0, variables.$compact-icon-spacing);
      }
      &--trailing {
        @include util.rtl-box(margin, variables.$compact-icon-spacing);
      }
    }
  }
  &[data-disabled] {
    opacity: map.get(typography.$emphasis-map, disabled);
  }
  &__icon {
    position: relative;
    vertical-align: middle;
    &--leading {
      @include util.rtl-box(margin, 0, variables.$icon-spacing);
    }
    &--trailing {
      @include util.rtl-box(margin, variables.$icon-spacing);
    }
  }
}
