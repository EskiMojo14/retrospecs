@use "sass:map";
@use "@/theme";
@use "@/theme/typography";
@use "@/util";
@use "./mixins";
@use "./variables";

.button {
  --dark-rgb: var(--orange-dark-rgb);
  --light-rgb: var(--orange-light-rgb);
  --background-rgb: var(--dark-rgb);
  --background-alpha: 0;
  --background: #{rgba(var(--background-rgb), var(--background-alpha))};
  --outline: var(--button-text);
  --outline-width: #{variables.$outline-width};
  --border-radius: #{variables.$border-radius};
  background: var(--background);
  color: var(--button-text);
  text-wrap: nowrap;
  padding: variables.$padding-y variables.$padding-x;
  min-height: variables.$min-height;
  border-radius: var(--border-radius);
  transition:
    background 200ms,
    outline 200ms,
    outline-offset 200ms;
  display: flex;
  justify-content: center;
  align-items: center;

  @include typography.style("button");

  @include mixins.ink("dark");
  @include theme.states;
  @include theme.focus-ring;

  @at-root button#{&} {
    appearance: none;
    border: none;
    &:focus:not([data-focus-visible]) {
      outline: none;
    }
  }
  @at-root a#{&} {
    text-decoration: none;
  }
  &--outlined,
  &--contained {
    position: relative;
    @include mixins.outline;
  }
  &--contained {
    @include mixins.contained-ink("light");
  }
  &[data-disabled] {
    opacity: map.get(typography.$emphasis-map, disabled);
  }
  @include mixins.colors;
  &__icon {
    display: inline-block;
    position: relative;
    vertical-align: top;
    margin-right: variables.$spacing;
  }
}
