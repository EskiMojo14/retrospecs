@use "sass:map";
@use "~/theme";
@use "~/theme/typography";
@use "~/theme/elevation";
@use "~/theme/layout";
@use "~/util";
@use "./mixins";
@use "./variables";

.button {
  --button-text: #{rgb(var(--button-text-rgb))};
  --button-outline: #{rgb(var(--button-outline-rgb))};
  --button-fill: #{rgb(var(--button-fill-rgb))};
  --button-filled-text: #{rgb(var(--button-filled-text-rgb))};
  --button-filled-outline: #{rgb(var(--button-filled-outline-rgb))};
  --outline-color: var(--button-outline);
  color: var(--button-text);
  text-wrap: nowrap;
  padding: variables.$padding;
  min-height: variables.$min-height;
  border-radius: var(--border-radius);
  transition:
    opacity 200ms,
    outline 200ms,
    outline-offset 200ms,
    box-shadow 200ms,
    translate 200ms;
  display: flex;
  justify-content: center;
  align-items: center;
  vertical-align: middle;
  position: relative;
  @include typography.style("button");

  @include mixins.colors;
  @include theme.focus-ring;

  @at-root button#{&} {
    appearance: none;
    border: none;
  }
  @at-root a#{&} {
    text-decoration: none;
  }
  &:focus:not([data-focus-visible]) {
    outline: none;
  }

  &--text,
  &--outlined {
    background: none;
  }

  &--outlined,
  &--filled,
  &--elevated {
    @include theme.outline;
  }
  &--filled,
  &--elevated {
    --button-text: var(--button-filled-text);
    --outline-color: var(--button-filled-outline);
    --background: var(--button-fill);
    background: var(--background);
  }
  &--elevated {
    --solid-shadow: var(--background);
    @include elevation.shadow(2);
    &[data-hovered] {
      translate: calc(var(--outline-width) * -1) calc(var(--outline-width) * -1);
      @include elevation.shadow(4);
    }
    &[data-focus-visible],
    &[data-pressed] {
      translate: 0 0;
      @include elevation.shadow(2);
    }
  }
  &--compact {
    padding: variables.$compact-padding;
    min-height: variables.$compact-min-height;
    .button__icon {
      &--leading {
        @include util.rtl-box(margin, 0, variables.$compact-icon-spacing);
      }
      &--trailing {
        @include util.rtl-box(margin, variables.$compact-icon-spacing);
      }
    }
  }
  &[data-disabled] {
    opacity: map.get(typography.$emphasis-map, disabled);
    &.button--elevated {
      @include elevation.shadow(0);
    }
  }
  @include theme.ripple(var(--button-text), " .button__ripple");
  @include theme.ripple-selected(
    $surface: " .button__ripple",
    $ripple-color: var(--button-text)
  );
  &[data-selected] {
    font-weight: var(--typography-weight-black);
  }
  &__content {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
  }
  &__icon {
    position: relative;
    vertical-align: middle;
    .button & {
      display: inline-flex;
    }
    &--leading {
      @include util.rtl-box(margin, 0, variables.$icon-spacing);
    }
    &--trailing {
      @include util.rtl-box(margin, variables.$icon-spacing);
    }
  }
}

.button-group {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.5rem;
  &__buttons {
    gap: 0;
    .button {
      &:first-child {
        border-radius: var(--border-radius) 0 0 var(--border-radius);
        &::before {
          border-radius: var(--outline-border-radius) 0 0
            var(--outline-border-radius);
        }
      }
      &:last-child {
        border-radius: 0 var(--border-radius) var(--border-radius) 0;
        &::before {
          border-radius: 0 var(--outline-border-radius)
            var(--outline-border-radius) 0;
        }
      }
      &:not(:last-child):not(:first-child) {
        border-radius: 0;
        &::before {
          border-radius: 0;
        }
      }
    }
    @include util.rtl {
      .button {
        &:first-child {
          border-radius: 0 var(--border-radius) var(--border-radius) 0;
          &::before {
            border-radius: 0 var(--outline-border-radius)
              var(--outline-border-radius) 0;
          }
        }
        &:last-child {
          border-radius: var(--border-radius) 0 0 var(--border-radius);
          &::before {
            border-radius: var(--outline-border-radius) 0 0
              var(--outline-border-radius);
          }
        }
      }
    }
    .button-group[data-orientation="vertical"] & {
      flex-direction: column;
      .button {
        &:first-child {
          border-radius: var(--border-radius) var(--border-radius) 0 0;
          &::before {
            border-radius: var(--outline-border-radius)
              var(--outline-border-radius) 0 0;
          }
        }
        &:last-child {
          border-radius: 0 0 var(--border-radius) var(--border-radius);
          &::before {
            border-radius: 0 0 var(--outline-border-radius)
              var(--outline-border-radius);
          }
        }
        &:not(:last-child):not(:first-child) {
          border-radius: 0;
          &::before {
            border-radius: 0;
          }
        }
      }
    }
  }
  &__description {
    white-space: pre-wrap;
    color: typography.emphasis("text", "medium");
  }
}

.floating-action-button {
  position: fixed;
  @include elevation.shadow(6);
  $size: 4rem;
  border-radius: $size * 0.5;
  height: $size;
  width: $size;
  bottom: 32px;
  transition:
    opacity 200ms,
    outline 200ms,
    outline-offset 200ms,
    box-shadow 200ms,
    translate 200ms,
    transform 300ms ease-in;
  @include util.rtl-position(right, 32px);
  @include layout.breakpoint("phone", "only") {
    bottom: 16px;
    @include util.rtl-position(right, 16px);
  }
  &[data-hovered] {
    translate: calc(var(--outline-width) * -1) calc(var(--outline-width) * -1);
    @include elevation.shadow(8);
  }
  &[data-focus-visible],
  &[data-pressed] {
    translate: 0 0;
    @include elevation.shadow(6);
  }
  &::before {
    border-radius: inherit;
  }
  &--exited {
    transition:
      opacity 200ms,
      outline 200ms,
      outline-offset 200ms,
      box-shadow 200ms,
      translate 200ms,
      transform 200ms ease-out;
    opacity: 0;
    transform: scale(0);
  }
  &--scroll-exited {
    @include layout.breakpoint("phone", "only") {
      transition:
        opacity 200ms,
        outline 200ms,
        outline-offset 200ms,
        box-shadow 200ms,
        translate 200ms,
        transform 200ms ease-out;
      opacity: 0;
      transform: scale(0);
    }
  }
  @include layout.breakpoint("tablet-l", "above") {
    &--extended {
      height: 3.5rem;
      width: auto;
      padding: 0 calc((var(--outline-width) * 4) + 0.5rem);
    }
    &__tooltip--extended {
      display: none;
    }
    &:not(.floating-action-button--extended) {
      .button__icon {
        margin: 0;
      }
      .floating-action-button__label {
        @include util.visually-hidden;
      }
    }
  }
  @include layout.breakpoint("tablet-l", "below") {
    .button__icon {
      margin: 0;
    }
    .floating-action-button__label {
      @include util.visually-hidden;
    }
  }
}
