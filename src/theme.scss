@use "sass:map";
@use "sass:meta";
@use "@material/ripple";

@mixin dark {
  [data-theme="dark"] &,
  &[data-theme="dark"] {
    @content;
  }
}

@mixin focus-ring {
  &[data-focus-visible] {
    outline: var(--outline-width) solid var(--focus-ring-color);
    outline-offset: var(--outline-width);
  }
}

@mixin outline(
  $border-radius: calc(var(--border-radius) - var(--outline-width))
) {
  &::before {
    content: "";
    position: absolute;
    top: var(--outline-width);
    left: var(--outline-width);
    right: var(--outline-width);
    bottom: var(--outline-width);
    border: var(--outline-width) solid var(--outline-color);
    --outline-border-radius: #{$border-radius};
    border-radius: var(--outline-border-radius);
    pointer-events: none;
  }
}

@mixin ripple($ripple-color, $root: &, $surface: "") {
  &[data-hovered]#{$surface}::before {
    opacity: ripple.states-opacity(#fff, "hover");
  }
  &[data-focused]#{$surface}::before {
    opacity: ripple.states-opacity(#fff, "focus");
    transition-duration: 75ms;
  }
  &[data-pressed]#{$surface}::before {
    opacity: #{ripple.states-opacity(#fff, "press")};
  }
  #{if($surface != '', $surface, &)} {
    border-radius: inherit;
    @include ripple.target-common;
    @include ripple.surface;
    &::before,
    &::after {
      background-color: $ripple-color;
    }
    &::after {
      --mdc-ripple-fg-opacity: #{ripple.states-opacity(#fff, "press")};
    }
    $unbounded-class: #{& + --unbounded};
    &:not(#{$unbounded-class}) {
      overflow: hidden;
      @include ripple.radius-bounded(50%);
    }
    &--unbounded {
      @include ripple.radius-unbounded;
    }
  }
}

@include ripple.common;
